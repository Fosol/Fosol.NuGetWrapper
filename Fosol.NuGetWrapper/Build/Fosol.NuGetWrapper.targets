<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="NuGetBuild">
  <PropertyGroup>
    <!-- Directory location that the NuGet Package will be built. -->
    <NuGetOutDir Condition=" '$(NuGetOutDir)' == '' ">$(OutDir)Package\</NuGetOutDir>
  </PropertyGroup>

  <Choose>
    <When Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' ">
      <Choose>
        <!-- Profile = "" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v3.5' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net35</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net40</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.5' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net45</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.5.1' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net451</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.5.2' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net452</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.6' And '$(TargetFrameworkProfile)' == '' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net46</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "Client" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == 'Client' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net40-client</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "Full" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == 'Full' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net40-full</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "CompactFramework" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == 'CompactFramework' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">net40-cf</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "Micro" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == 'Micro' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">netmf</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "WndowsPhone" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v3.0' And '$(TargetFrameworkProfile)' == 'WindowsPhone' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">wp7</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' And '$(TargetFrameworkProfile)' == 'WindowsPhone' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">wp71</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.5' And '$(TargetFrameworkProfile)' == 'WindowsPhone' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">windowsphone8</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <!-- Profile = "WindowsStoreApp" -->
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.5' And '$(TargetFrameworkProfile)' == 'WindowsStoreApp' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">windows8</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
      </Choose>
    </When>
    <When Condition=" '$(TargetFrameworkIdentifier)' == 'Silverlight' ">
      <Choose>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v3.0' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">sl3</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v4.0' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">sl4</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
        <When Condition=" '$(TargetFrameworkVersion)' == 'v5.0' ">
          <PropertyGroup>
            <NuGetTargetFrameworkVersion Condition=" '$(NuGetTargetFrameworkVersion)' == '' ">sl5</NuGetTargetFrameworkVersion>
          </PropertyGroup>
        </When>
      </Choose>
    </When>    
  </Choose>

  <!-- Clean up the files in the NuGet package directory. -->
  <ItemGroup>
    <FilesToDelete Include="$(NuGetOutDir)**\*.*"/>
    <DirsToClean Include="$(OutDir)Package"/>
  </ItemGroup>

  <Target Name="NuGetClean" AfterTargets="CoreClean">
    <Message Text="Cleaning files in '$(NuGetOutDir)'"/>
    <Delete Files="@(FilesToDelete)"/>
    <!--<RemoveDir Directories="@(DirsToClean)"/>-->
  </Target>

  <!-- By default it will include the target assembly created by the build. -->
  <ItemGroup Condition="'$(OutputType)' == 'Library'">
    <OutputLibFiles Include="$(TargetPath)"/>
  </ItemGroup>
  <ItemGroup Condition="'$(OutputType)' == 'Exe' ">
    <OutputToolsFiles Include="$(TargetPath)"/>
  </ItemGroup>
  <ItemGroup Condition="'$(OutputType)' == 'Winexe' ">
    <OutputToolsFiles Include="$(TargetPath)"/>
  </ItemGroup>

  <!-- Build a NuGet package based on the nuspec file in the project. -->
  <Target Name="NuGetBuild" AfterTargets="CopyFilesToOutputDirectory">
    <ItemGroup>
      <OutputBuildFiles Include="$(OutDir)Build\**\*.*"/>
      <OutputContentFiles Include="$(OutDir)Content\**\*.*"/>
      <OutputLibFiles Include="$(OutDir)Lib\**\*.*"/>
      <OutputToolsFiles Include="$(OutDir)Tools\**\*.*"/>
    </ItemGroup>
    
    <Message Text="Build NuGet Package for $(TargetFrameworkIdentifier) $(TargetFrameworkVersion) $(TargetFrameworkProfile)"/>
    <Message Text="OutDir: $(OutDir)"/>
    <Message Text="TargetPath: $(TargetPath)"/>
    <Message Text="Output Build Files; @(OutputBuildFiles)"/>
    <Message Text="Output Content Files; @(OutputContentFiles)"/>
    <Message Text="Output Lib Files; @(OutputLibFiles)"/>
    <Message Text="Output Tools Files; @(OutputToolsFiles)"/>
    <!--<CallTarget Targets="NuGetInit;NuGetClean;NuGetPrepare;NuGetSpec;NuGetPack"/>-->
  </Target>

  <!-- Initialize information from the assembly. -->
  <Target Name="NuGetInit" AfterTargets="NuGetBuild" DependsOnTargets="NuGetBuild">
    <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
      <Output TaskParameter="Assemblies" ItemName="Info" />
    </GetAssemblyIdentity>

    <PropertyGroup>
      <!-- Nuspec information values. -->
      <NuGetSpecId Condition=" '$(NuGetSpecId)' == '' ">%(Info.Name)</NuGetSpecId>
      <NuGetSpecVersion Condition=" '$(NuGetSpecVersion)' == '' ">%(Info.Version)</NuGetSpecVersion>
      <NuGetSpecTitle Condition="'$(NuGetSpecTitle)'==''">$(MSBuildProjectName)</NuGetSpecTitle>
      <NuGetSpecAuthors Condition="'$(NuGetSpecAuthors)'==''"></NuGetSpecAuthors>
      <NuGetSpecOwners Condition="'$(NuGetSpecOwners)'==''">$(NuGetSpecAuthors)</NuGetSpecOwners>
      <NuGetSpecDescription Condition="'$(NuGetSpecDescription)'==''"></NuGetSpecDescription>
      <NuGetSpecReleaseNotes Condition="'$(NuGetSpecReleaseNotes)'==''"></NuGetSpecReleaseNotes>
      <NuGetSpecSummary Condition="'$(NuGetSpecSummary)'==''"></NuGetSpecSummary>
      <NuGetSpecLanguage Condition="'$(NuGetSpecLanguage)'==''"></NuGetSpecLanguage>
      <NuGetSpecProjectUrl Condition="'$(NuGetSpecProjectUrl)'==''"></NuGetSpecProjectUrl>
      <NuGetSpecIconUrl Condition="'$(NuGetSpecIconUrl)'==''"></NuGetSpecIconUrl>
      <NuGetSpecLicenseUrl Condition="'$(NuGetSpecLicenseUrl)'==''"></NuGetSpecLicenseUrl>
      <NuGetSpecCopyright Condition="'$(NuGetSpecCopyright)'==''"></NuGetSpecCopyright>
      <NuGetSpecRequireLicenseAcceptance Condition="'$(NuGetSpecRequireLicenseAcceptance)'==''">No</NuGetSpecRequireLicenseAcceptance>
      <NuGetSpecDependencies Condition="'$(NuGetSpecDependencies)'==''"></NuGetSpecDependencies>
      <NuGetSpecReferences Condition="'$(NuGetSpecReferences)'==''"></NuGetSpecReferences>
      <NuGetSpecFrameworkAssemblies Condition="'$(NuGetSpecFrameworkAssemblies)'==''"></NuGetSpecFrameworkAssemblies>
      <NuGetSpecTags Condition="'$(NuGetSpecTags)'==''"></NuGetSpecTags>
      <NuGetSpecDevelopmentDepency Condition="'$(NuGetSpecDevelopmentDepency)'==''"></NuGetSpecDevelopmentDepency>
      
      <!-- Nuspec package configuration. -->
      <NuGetOutDir Condition=" '$(NuGetOutDir)' == '$(OutDir)Package\' ">$(NuGetOutDir)$(NuGetSpecId).$(NuGetSpecVersion)\</NuGetOutDir>
      <NuGetSpecInput Condition=" '$(NuGetSpecInput)' == '' ">$(NuGetSpecId)$(NuGetSpecExt)</NuGetSpecInput>
      <NuGetSpecInputPath Condition=" '$(NuGetSpecInputPath)' == '' ">$(ProjectDir)$(NuGetSpecId)$(NuGetSpecExt)</NuGetSpecInputPath>
      <NuGetSpecOutput Condition=" '$(NuGetSpecOutput)' == '' ">$(NuGetSpecId).$(NuGetSpecVersion)$(NuGetSpecExt)</NuGetSpecOutput>
      <NuGetSpecOutputPath Condition=" '$(NuGetSpecOutputPath)' == '' ">$(ProjectDir)$(NuGetOutDir)$(NuGetSpecOutput)</NuGetSpecOutputPath>
      <NuGetOutput>$(NuGetOutDir)$(NuGetSpecId).$(NuGetSpecVersion)$(NuGetPackageExt)</NuGetOutput>
    </PropertyGroup>

    <Message Text="NuGet Package Configuration Metadata Information"/>
    <Message Text="NuGetSpecId: $(NuGetSpecId)"/>
    <Message Text="NuGetSpecVersion: $(NuGetSpecVersion)"/>
    <Message Text="NuGetSpecTitle: $(NuGetSpecTitle)"/>
    <Message Text="NuGetSpecAuthors: $(NuGetSpecAuthors)"/>
    <Message Text="NuGetSpecOwners: $(NuGetSpecOwners)"/>
    <Message Text="NuGetSpecDescription: $(NuGetSpecDescription)"/>
    <Message Text="NuGetSpecReleaseNotes: $(NuGetSpecReleaseNotes)"/>
    <Message Text="NuGetSpecSummary: $(NuGetSpecSummary)"/>
    <Message Text="NuGetSpecLanguage: $(NuGetSpecLanguage)"/>
    <Message Text="NuGetSpecProjectUrl: $(NuGetSpecProjectUrl)"/>
    <Message Text="NuGetSpecIconUrl: $(NuGetSpecIconUrl)"/>
    <Message Text="NuGetSpecLicenseUrl: $(NuGetSpecLicenseUrl)"/>
    <Message Text="NuGetSpecCopyright: $(NuGetSpecCopyright)"/>
    <Message Text="NuGetSpecRequireLicenseAcceptance: $(NuGetSpecRequireLicenseAcceptance)"/>
    <Message Text="NuGetSpecDependencies: $(NuGetSpecDependencies)"/>
    <Message Text="NuGetSpecReferences: $(NuGetSpecReferences)"/>
    <Message Text="NuGetSpecFrameworkAssemblies: $(NuGetSpecFrameworkAssemblies)"/>
    <Message Text="NuGetSpecTags: $(NuGetSpecTags)"/>
    <Message Text="NuGetSpecDevelopmentDepency: $(NuGetSpecDevelopmentDepency)"/>

    <Message Text="NuGet Package Configuration Location"/>
    <Message Text="NuGetOutDir: $(NuGetOutDir)"/>
    <Message Text="NuGetSpecInput: $(NuGetSpecInput)"/>
    <Message Text="NuGetSpecInputPath: $(NuGetSpecInputPath)"/>
    <Message Text="NuGetSpecOutput: $(NuGetSpecOutput)"/>
    <Message Text="NuGetSpecOutputPath: $(NuGetSpecOutputPath)"/>
  </Target>

  <!-- Copy files from the build directory into the NuGet package directory. -->
  <Target Name="NuGetPrepare" AfterTargets="NuGetInit" DependsOnTargets="NuGetInit">
    <Message Text="Prepare NuGet Package: $(NuGetOutDir)"/>
    <MakeDir Directories="$(NuGetOutDir)"/>
    <MakeDir Condition=" '@(OutputBuildFiles)' != '' " Directories="$(NuGetOutDir)build\%(RecursiveDir)"/>
    <MakeDir Condition=" '@(OutputContentFiles)' != '' " Directories="$(NuGetOutDir)content\%(RecursiveDir)"/>
    <MakeDir Condition=" '@(OutputLibFiles)' != '' " Directories="$(NuGetOutDir)lib\"/>
    <MakeDir Condition=" '@(OutputToolsFiles)' != '' " Directories="$(NuGetOutDir)tools\%(RecursiveDir)"/>

    <Copy SourceFiles="@(OutputBuildFiles)" DestinationFolder="$(NuGetOutDir)build\%(RecursiveDir)"/>
    <Copy SourceFiles="@(OutputContentFiles)" DestinationFolder="$(NuGetOutDir)content\%(RecursiveDir)"/>
    <Copy SourceFiles="@(OutputLibFiles)" DestinationFolder="$(NuGetOutDir)lib\$(NuGetTargetFrameworkVersion)"/>
    <Copy SourceFiles="@(OutputToolsFiles)" DestinationFolder="$(NuGetOutDir)tools\%(RecursiveDir)"/>

    <ItemGroup>
      <NuGetBuildFiles Include="$(NuGetOutDir)build\**\*.*"/>
      <NuGetContentFiles Include="$(NuGetOutDir)content\**\*.*"/>
      <NuGetLibFiles Include="$(NuGetOutDir)lib\**\*.*"/>
      <NuGetToolsFiles Include="$(NuGetOutDir)tools\**\*.*"/>
    </ItemGroup>

    <Message Text="NuGet Build Files: @(NuGetBuildFiles)"/>
    <Message Text="NuGet Content Files: @(NuGetContentFiles)"/>
    <Message Text="NuGet Lib Files: @(NuGetLibFiles)"/>
    <Message Text="NuGet Tools Files: @(NuGetToolsFiles)"/>
  </Target>

  <!-- Specify where the XSLT file is so that we can create a spec file. -->
  <Target Name="NuGetSpec" AfterTargets="NuGetPrepare" DependsOnTargets="NuGetPrepare">
    <ItemGroup>
      <NuGetPackageXslt Include="$(SolutionDir)\packages\$(NuGetWrapperId).*\Tools\$(NuGetWrapperId).xslt"/>
    </ItemGroup>
    
    <PropertyGroup>
      <NuGetPackageXsltPath>%(NuGetPackageXslt.FullPath)</NuGetPackageXsltPath>
    </PropertyGroup>
  </Target>

  <!-- Create NuGet Package Spec File. -->
  <Target Name="NuGetBuildSpec" AfterTargets="NuGetSpec" DependsOnTargets="NuGetSpec">
    <Message Text="Create NuGet Package Spec File"/>
    <Message Text="NuGetPackageXslt: $(NuGetPackageXsltPath)"/>
    <PropertyGroup>
      <NuGetPackageBuild>@(NuGetBuildFiles->'%(RelativeDir)%(FileName)%(Extension)'->Replace('$(NuGetOutDir)', ''))</NuGetPackageBuild>
      <NuGetPackageContent>@(NuGetContentFiles->'%(RelativeDir)%(FileName)%(Extension)'->Replace('$(NuGetOutDir)', ''))</NuGetPackageContent>
      <NuGetPackageLib>@(NuGetLibFiles->'%(RelativeDir)%(FileName)%(Extension)'->Replace('$(NuGetOutDir)', ''))</NuGetPackageLib>
      <NuGetPackageTools>@(NuGetToolsFiles->'%(RelativeDir)%(FileName)%(Extension)'->Replace('$(NuGetOutDir)', ''))</NuGetPackageTools>
    </PropertyGroup>
    <Message Text="NuGet Package Build: $(NuGetPackageBuild)"/>
    <Message Text="NuGet Package Content: $(NuGetPackageContent)"/>
    <Message Text="NuGet Package Lib: $(NuGetPackageLib)"/>
    <Message Text="NuGet Package Tools: $(NuGetPackageTools)"/>

    <!-- Transform the default NuGet spec file into a new one in the package directory. -->
    <XslTransformation XmlInputPaths="$(NuGetSpecInputPath)"
                       XslInputPath="$(NuGetPackageXsltPath)"
                       OutputPaths="$(NuGetSpecOutputPath)"
                       Parameters="
                        &lt;Parameter Name='id' Value='$(NuGetSpecId)'/&gt;
                        &lt;Parameter Name='version' Value='$(NuGetSpecVersion)'/&gt;
                        &lt;Parameter Name='title' Value='$(NuGetSpecTitle)'/&gt;
                        &lt;Parameter Name='authors' Value='$(NuGetSpecAuthors)'/&gt;
                        &lt;Parameter Name='owners' Value='$(NuGetSpecOwners)'/&gt;
                        &lt;Parameter Name='description' Value='$(NuGetSpecDescription)'/&gt;
                        &lt;Parameter Name='releaseNotes' Value='$(NuGetSpecReleaseNotes)'/&gt;
                        &lt;Parameter Name='summary' Value='$(NuGetSpecSummary)'/&gt;
                        &lt;Parameter Name='language' Value='$(NuGetSpecLanguage)'/&gt;
                        &lt;Parameter Name='projectUrl' Value='$(NuGetSpecProjectUrl)'/&gt;
                        &lt;Parameter Name='iconUrl' Value='$(NuGetSpecIconUrl)'/&gt;
                        &lt;Parameter Name='licenseUrl' Value='$(NuGetSpecLicenseUrl)'/&gt;
                        &lt;Parameter Name='copyright' Value='$(NuGetSpecCopyright)'/&gt;
                        &lt;Parameter Name='requireLicenseAcceptance' Value='$(NuGetSpecRequireLicenseAcceptance)'/&gt;
                        &lt;Parameter Name='dependencies' Value='$(NuGetSpecDependencies)'/&gt;
                        &lt;Parameter Name='references' Value='$(NuGetSpecReferences)'/&gt;
                        &lt;Parameter Name='frameworkAssemblies' Value='$(NuGetSpecFrameworkAssemblies)'/&gt;
                        &lt;Parameter Name='tags' Value='$(NuGetSpecTags)'/&gt;
                        &lt;Parameter Name='developmentDependency' Value='$(NuGetSpecDevelopmentDepency)'/&gt;
                        &lt;Parameter Name='build' Value='$(NuGetPackageBuild)'/&gt;
                        &lt;Parameter Name='content' Value='$(NuGetPackageContent)'/&gt;
                        &lt;Parameter Name='lib' Value='$(NuGetPackageLib)'/&gt;
                        &lt;Parameter Name='tools' Value='$(NuGetPackageTools)'/&gt;
                        "/>
  </Target>

  <!-- Create a NuGet Package based on the nuspec file created in the prior target. -->
  <Target Name="NuGetPack" AfterTargets="NuGetBuildSpec" DependsOnTargets="NuGetBuildSpec">
    <Message Text="NuGetOutput $(NuGetOutput)"/>
    <Exec Command="nuget.exe pack &quot;$(NuGetSpecOutput)&quot; -Verbosity detailed -NonInteractive" WorkingDirectory="$(NuGetOutDir)"/>
  </Target>

</Project>

